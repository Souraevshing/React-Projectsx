{"version":3,"sources":["Data.js","Component.js","Darkmode.js","reportWebVitals.js","index.js"],"names":["data","id","title","date","Date","length","snippet","Component","className","moment","format","Darkmode","useState","mode","localStorage","getItem","getLocalStorage","setMode","useEffect","document","documentElement","setItem","onClick","map","items","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2LA+BeA,EA/BF,CACX,CACEC,GAAI,EACJC,MAAO,kBACPC,KAAM,IAAIC,KAAK,KAAM,EAAG,GACxBC,OAAQ,GACRC,QAAQ,gCAEV,CACEL,GAAI,EACJC,MAAO,qBACPC,KAAM,IAAIC,KAAK,KAAM,GAAI,IACzBC,OAAQ,EACRC,QAAQ,6CAEV,CACEL,GAAI,EACJC,MAAO,sBACPC,KAAM,IAAIC,KAAK,KAAM,EAAG,IACxBC,OAAQ,EACRC,QAAQ,0BAEV,CACEL,GAAI,EACJC,MAAO,qCACPC,KAAM,IAAIC,KAAK,KAAM,EAAG,GACxBC,OAAQ,EACRC,QAAQ,mB,uBCXGC,EAbG,SAAC,GAAsC,IAApCL,EAAmC,EAAnCA,MAAOI,EAA4B,EAA5BA,QAASH,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACzC,OACE,0BAASG,UAAU,OAAnB,UACE,6BAAKN,IACL,sBAAKM,UAAU,YAAf,UACE,+BAAOC,IAAON,GAAMO,OAAO,6BAC3B,iCAAOL,EAAP,iBAEF,4BAAIC,QCmCKK,EAlCE,WACf,MAAwBC,mBATF,WACtB,IAAIC,EAAO,cAIX,OAHIC,aAAaC,QAAQ,UACvBF,EAAOC,aAAaC,QAAQ,SAEvBF,EAI0BG,IAAjC,mBAAOH,EAAP,KAAaI,EAAb,KAcA,OALAC,qBAAU,WACRC,SAASC,gBAAgBZ,UAAYK,EACrCC,aAAaO,QAAQ,OAAQR,KAC5B,CAACA,IAGF,iCACE,8BACE,sBAAKL,UAAU,aAAf,UACE,0CACA,wBAAQA,UAAU,MAAMc,QAlBjB,WAEXL,EADW,gBAATJ,EACM,aAEA,gBAcJ,yBAKJ,yBAASL,UAAU,WAAnB,SACGR,EAAKuB,KAAI,SAACC,GACT,OAAO,cAAC,EAAD,eAA8BA,GAAdA,EAAMvB,aC3BxBwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,SAM1BZ,M","file":"static/js/main.1b4ba000.chunk.js","sourcesContent":["const data = [\r\n  {\r\n    id: 1,\r\n    title: 'the WET Codbase',\r\n    date: new Date(2020, 9, 4),\r\n    length: 11,\r\n    snippet: `Come waste your time with me`,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'goodby, clean code',\r\n    date: new Date(2019, 10, 22),\r\n    length: 5,\r\n    snippet: `Let clean code guide you. Then let it go.`,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'my decade in review',\r\n    date: new Date(2018, 7, 11),\r\n    length: 5,\r\n    snippet: `A personal reflection.`,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'what are the react team principles',\r\n    date: new Date(2015, 5, 4),\r\n    length: 5,\r\n    snippet: `UI Before API.`,\r\n  },\r\n]\r\n\r\nexport default data\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Component = ({ title, snippet, date, length }) => {\r\n  return (\r\n    <article className='post'>\r\n      <h2>{title}</h2>\r\n      <div className='post-info'>\r\n        <span>{moment(date).format('MMMM Do YYYY, h:mm:ss a')}</span>\r\n        <span>{length} minutes</span>\r\n      </div>\r\n      <p>{snippet}</p>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Component\r\n","import React, { useEffect, useState } from 'react'\r\nimport data from './Data'\r\nimport Component from './Component'\r\n\r\nconst getLocalStorage = () => {\r\n  let mode = 'light-theme'\r\n  if (localStorage.getItem('mode')) {\r\n    mode = localStorage.getItem('mode')\r\n  }\r\n  return mode\r\n}\r\n\r\nconst Darkmode = () => {\r\n  const [mode, setMode] = useState(getLocalStorage())\r\n  const toggle = () => {\r\n    if (mode === 'light-theme') {\r\n      setMode('dark-theme')\r\n    } else {\r\n      setMode('light-theme')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.documentElement.className = mode\r\n    localStorage.setItem('mode', mode)\r\n  }, [mode])\r\n\r\n  return (\r\n    <main>\r\n      <nav>\r\n        <div className='nav-center'>\r\n          <h1>Darkmode</h1>\r\n          <button className='btn' onClick={toggle}>\r\n            Toggle\r\n          </button>\r\n        </div>\r\n      </nav>\r\n      <section className='articles'>\r\n        {data.map((items) => {\r\n          return <Component key={items.id} {...items} />\r\n        })}\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Darkmode\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Darkmode from './Darkmode'\nimport reportWebVitals from './reportWebVitals'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Darkmode />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}