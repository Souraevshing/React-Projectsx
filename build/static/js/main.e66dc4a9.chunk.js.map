{"version":3,"sources":["features/Users/UserSlice.js","Firebase.js","components/Header.js","components/ImageSlider.js","components/Viewer.js","features/Movies/MovieSlice.js","components/Movies.js","components/Home.js","components/Details.js","components/Error.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["UserSlice","createSlice","name","initialState","email","photo","reducers","setUserLogin","state","action","payload","setSignOut","actions","selectUserName","user","selectUserPhoto","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","storage","Header","userName","useSelector","dispatch","useDispatch","history","useHistory","useEffect","onAuthStateChanged","a","displayName","photoURL","push","Nav","Logo","src","NavMenu","alt","UserImage","onClick","signOut","then","LoginContainer","Login","signInWithPopup","res","styled","nav","img","div","ImageSlider","Carousel","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","Wrap","Slider","Viewer","Container","MovieSlice","movies","setMovies","selectMovies","movie","Movies","Content","map","to","id","cardImg","Home","collection","onSnapshot","snapshot","tempMovies","docs","doc","console","log","data","main","Details","useParams","useState","setMovie","get","exists","Background","backgroundImg","ImageTitle","titleImg","Controls","PlayButton","TrailerButton","AddButton","GroupWatchButton","SubTitle","subTitle","Description","description","button","Error","CTA","CTALogoOne","SignUp","CTALogoTwo","p","App","className","path","exact","store","configureStore","reducer","MovieReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e66dc4a9.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  email: '',\r\n  photo: '',\r\n}\r\n\r\nconst UserSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setUserLogin: (state, action) => {\r\n      state.name = action.payload.name\r\n      state.email = action.payload.email\r\n      state.photo = action.payload.photo\r\n    },\r\n    setSignOut: (state) => {\r\n      state.name = null\r\n      state.email = null\r\n      state.photo = null\r\n    },\r\n  },\r\n})\r\n\r\nexport const { setUserLogin, setSignOut } = UserSlice.actions\r\n\r\nexport const selectUserName = (state) => state.user.name\r\nexport const selectUserEmail = (state) => state.user.email\r\nexport const selectUserPhoto = (state) => state.user.photo\r\n\r\nexport default UserSlice.reducer\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyA9BnlX96fMf7XiUVCFRsoQzG8DGERJkeY',\r\n  authDomain: 'disneyplus-clone-a33d5.firebaseapp.com',\r\n  projectId: 'disneyplus-clone-a33d5',\r\n  storageBucket: 'disneyplus-clone-a33d5.appspot.com',\r\n  messagingSenderId: '37918794208',\r\n  appId: '1:37918794208:web:dbe9842dfe1dda522a4b85',\r\n  measurementId: 'G-DRVLJKWRWG',\r\n}\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\nconst db = firebaseApp.firestore()\r\nconst auth = firebase.auth()\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nconst storage = firebase.storage()\r\n\r\nexport { auth, provider, storage }\r\nexport default db\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect } from 'react'\r\nimport { findRenderedComponentWithType } from 'react-dom/test-utils'\r\nimport {\r\n  selectUserName,\r\n  selectUserPhoto,\r\n  setUserLogin,\r\n  setSignOut,\r\n} from '../features/Users/UserSlice'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { auth, provider } from '../Firebase'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst Header = () => {\r\n  const userName = useSelector(selectUserName)\r\n\r\n  const userPhoto = useSelector(selectUserPhoto)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const history = useHistory()\r\n\r\n  const SignIn = () => {\r\n    auth.signInWithPopup(provider).then((res) => {\r\n      let user = res.user\r\n      dispatch(\r\n        setUserLogin({\r\n          name: user.displayName,\r\n          email: user.email,\r\n          photo: user.photoURL,\r\n        })\r\n      )\r\n      history.push('/')\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        dispatch(\r\n          setUserLogin({\r\n            name: user.displayName,\r\n            email: user.email,\r\n            photo: user.photoURL,\r\n          })\r\n        )\r\n        history.push('/')\r\n      }\r\n    })\r\n  })\r\n\r\n  const SignOut = () => {\r\n    auth.signOut().then(() => {\r\n      dispatch(setSignOut())\r\n      history.push('/login')\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Nav>\r\n      <Logo src='/images/logo.svg' />\r\n      {!userName ? (\r\n        <LoginContainer>\r\n          <Login onClick={SignIn}>login</Login>\r\n        </LoginContainer>\r\n      ) : (\r\n        <>\r\n          <NavMenu>\r\n            <a>\r\n              <img src='/images/home-icon.svg' alt='' />\r\n\r\n              <span>HOME</span>\r\n            </a>\r\n            <a>\r\n              <img src='/images/search-icon.svg' alt='' />\r\n\r\n              <span>SEARCH</span>\r\n            </a>\r\n            <a>\r\n              <img src='/images/watchlist-icon.svg' alt='' />\r\n\r\n              <span>ORIGINALS</span>\r\n            </a>\r\n            <a>\r\n              <img src='/images/movie-icon.svg' alt='' />\r\n\r\n              <span>MOVIES</span>\r\n            </a>\r\n            <a>\r\n              <img src='/images/series-icon.svg' alt='' />\r\n\r\n              <span>SERIES</span>\r\n            </a>\r\n          </NavMenu>\r\n\r\n          <UserImage onClick={SignOut} src='/images/profile.jpg' />\r\n        </>\r\n      )}\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default Header\r\n\r\nconst Nav = styled.nav`\r\n  height: 70px;\r\n  background: #090b13;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 36px;\r\n  overflow-x: hidden;\r\n`\r\n\r\nconst Logo = styled.img`\r\n  width: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst NavMenu = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  margin-left: 25px;\r\n  align-items: center;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 12px;\r\n    cursor: pointer;\r\n    img {\r\n      height: 25px;\r\n    }\r\n    span {\r\n      font-size: 13px;\r\n      letter-spacing: 1.42px;\r\n      position: relative;\r\n\r\n      &:after {\r\n        content: '';\r\n        height: 2px;\r\n        background: whitesmoke;\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: -6px;\r\n        opacity: 0;\r\n        transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\r\n        transform: scaleX(0);\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      span:after {\r\n        transform: scaleX(1);\r\n        opacity: 1;\r\n      }\r\n    }\r\n  }\r\n`\r\nconst UserImage = styled.img`\r\n  width: 48px;\r\n  height: 48px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  background-color: black;\r\n`\r\nconst Login = styled.div`\r\n  border: 1px solid #f9f9f9;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  text-transform: uppercase;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  transition: all 0.2s ease 0s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #f9f9f9;\r\n    color: #000;\r\n    border-color: transparent;\r\n  }\r\n`\r\nconst LoginContainer = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`\r\n","import React from 'react'\r\nimport Slider from 'react-slick'\r\nimport 'slick-carousel/slick/slick.css'\r\nimport 'slick-carousel/slick/slick-theme.css'\r\nimport styled from 'styled-components'\r\n\r\nconst ImageSlider = () => {\r\n  let settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 800,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n  }\r\n\r\n  return (\r\n    <Carousel {...settings}>\r\n      <Wrap>\r\n        <img src='/images/slider-badging.jpg' alt='' />\r\n      </Wrap>\r\n      <Wrap>\r\n        <img src='/images/slider-badag.jpg' alt='' />\r\n      </Wrap>\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ImageSlider\r\n\r\nconst Carousel = styled(Slider)`\r\n  margin-top: 20px;\r\n\r\n  ul li button {\r\n    &:before {\r\n      font-size: 10px;\r\n      color: rgb(150, 100, 171);\r\n    }\r\n  }\r\n\r\n  li.slick-active button:before {\r\n    color: white;\r\n  }\r\n\r\n  .slick-list {\r\n    overflow: visible;\r\n  }\r\n\r\n  button {\r\n    z-index: 1;\r\n  }\r\n`\r\n\r\nconst Wrap = styled.div`\r\n  cursor: pointer;\r\n  img {\r\n    border: 4px solid transparent;\r\n    border-radius: 4px;\r\n    width: 100%;\r\n    height: 100%;\r\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\r\n      rgb(0 0 0 / 73%) 0px 16px 10px -10px;\r\n    transition-duration: 300ms;\r\n\r\n    &:hover {\r\n      border: 4px solid rgba(249, 249, 249, 0.8);\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\n\r\nimport styled from 'styled-components'\r\n\r\nfunction Viewer() {\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <img src='/images/viewers-disney.png' alt='' />\r\n      </Wrap>\r\n      <Wrap>\r\n        <img src='/images/viewers-pixar.png' alt='' />\r\n      </Wrap>\r\n      <Wrap>\r\n        <img src='/images/viewers-starwars.png' alt='' />\r\n      </Wrap>\r\n      <Wrap>\r\n        <img src='/images/viewers-national.png' alt='' />\r\n      </Wrap>\r\n      <Wrap>\r\n        <img src='/images/viewers-marvel.png' alt='' />\r\n      </Wrap>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Viewer\r\n\r\nconst Container = styled.div`\r\n  margin-top: 30px;\r\n  display: grid;\r\n  grid-gap: 25px;\r\n  padding: 30px 0px 26px;\r\n  grid-template-columns: repeat(5, minmax(0, 1fr));\r\n`\r\n\r\nconst Wrap = styled.div`\r\n  border-radius: 9px;\r\n  cursor: pointer;\r\n  border: 3px solid rgba(249, 249, 249, 0.1);\r\n  box-shadow: rgba(0 0 0 / 69%) 0px 26px 30px -10px,\r\n    rgb(0 0 0 / 73%) 0px 16px 10px -10px;\r\n  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: rgba(0 0 0 / 80%) 0px 40px 58px -16px,\r\n      rgb(0 0 0 / 72%) 0px 30px 22px -10px;\r\n    transform: scale(1.05);\r\n    border-color: rgba(249, 249, 249, 0.8);\r\n  }\r\n`\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  movies: [],\r\n}\r\n\r\nconst MovieSlice = createSlice({\r\n  name: 'movie',\r\n  initialState,\r\n  reducers: {\r\n    setMovies: (state, action) => {\r\n      state.movies = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { setMovies } = MovieSlice.actions\r\n\r\nexport const selectMovies = (state) => state.movie.movies\r\n\r\nexport default MovieSlice.reducer\r\n","import React from 'react'\r\nimport { selectMovies } from '../features/Movies/MovieSlice'\r\nimport { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nconst Movies = () => {\r\n  const movies = useSelector(selectMovies)\r\n\r\n  return (\r\n    <Container>\r\n      <h4>Recommended for You</h4>\r\n      <Content>\r\n        {movies &&\r\n          movies.map((movie) => (\r\n            <Wrap key={movie.id}>\r\n              <Link to={`/detail/${movie.id}`}>\r\n                <img src={movie.cardImg} alt='' />\r\n              </Link>\r\n            </Wrap>\r\n          ))}\r\n      </Content>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Movies\r\n\r\nconst Container = styled.div``\r\n\r\nconst Content = styled.div`\r\n  display: grid;\r\n  grid-gap: 25px;\r\n  grid-template-columns: repeat(4, minmax(0, 1fr));\r\n`\r\n\r\nconst Wrap = styled.div`\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  border: 3px solid rgba(249, 249, 249, 0.1);\r\n  box-shadow: rgba(0 0 0 / 69%) 0px 26px 30px -10px,\r\n    rgb(0 0 0 / 73%) 0px 16px 10px -10px;\r\n  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    border-color: rgba(249, 249, 249, 0.8);\r\n    box-shadow: rgba(0 0 0 / 80%) 8px 40px 58px -16px,\r\n      rgb(0 0 0 / 72%) 0px 30px 22px -10px;\r\n  }\r\n`\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport ImageSlider from './ImageSlider'\r\nimport Viewer from './Viewer'\r\nimport Movies from './Movies'\r\nimport db from '../Firebase'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setMovies } from '../features/Movies/MovieSlice'\r\n\r\nconst Home = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    db.collection('movies').onSnapshot((snapshot) => {\r\n      let tempMovies = snapshot.docs.map((doc) => {\r\n        console.log(doc.data())\r\n        return { id: doc.id, ...doc.data() }\r\n      })\r\n      dispatch(setMovies(tempMovies))\r\n    })\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      <ImageSlider />\r\n      <Viewer />\r\n      <Movies />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Home\r\n\r\nconst Container = styled.main`\r\n  min-height: calc(100vh - 70px);\r\n  padding: 0 calc(3.5vw + 5px);\r\n  position: relative;\r\n  overflow-x: hidden;\r\n\r\n  &:before {\r\n    background: url('/images/home-background.png') center center / cover\r\n      no-repeat fixed;\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    z-index: -1;\r\n  }\r\n`\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport db from '../Firebase'\r\n\r\nfunction Details() {\r\n  const { id } = useParams()\r\n  const [movie, setMovie] = useState([])\r\n\r\n  useEffect(() => {\r\n    db.collection('movies')\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          setMovie(doc.data())\r\n         // console.log(setMovie)\r\n        } else {\r\n          //console.log(`Movie not exist`)\r\n        }\r\n      })\r\n  })\r\n\r\n  console.log('movie is' + movie)\r\n\r\n  return (\r\n    <Container>\r\n      {movie && (\r\n        <>\r\n      <Background>\r\n        <img src={movie.backgroundImg} alt='' />\r\n      </Background>\r\n      <ImageTitle>\r\n        <img src={movie.titleImg} alt='' />\r\n      </ImageTitle>\r\n      <Controls>\r\n        <PlayButton>\r\n          <img src='/images/play-icon-black.png' alt='' />\r\n          <span>PLAY</span>\r\n        </PlayButton>\r\n        <TrailerButton>\r\n          <img src='/images/play-icon-white.png' alt='' />\r\n          <span>TRAILER</span>\r\n        </TrailerButton>\r\n        <AddButton>\r\n          <span>+</span>\r\n        </AddButton>\r\n        <GroupWatchButton>\r\n          <img src='/images/group-icon.png' alt='' />\r\n        </GroupWatchButton>\r\n      </Controls>\r\n      <SubTitle>{movie.subTitle}</SubTitle>\r\n      <Description>{movie.description}</Description>\r\n      </>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Details\r\n\r\nconst Container = styled.div`\r\n  min-height: calc(100vh - 70px);\r\n  padding: 0 calc(3.5vw + 5px);\r\n  position: relative;\r\n`\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  z-index: -1;\r\n  opacity: 0.8;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n`\r\nconst ImageTitle = styled.div`\r\n  height: 30vh;\r\n  min-height: 170px;\r\n  width: 35vw;\r\n  min--width: 200px;\r\n  margin-top: 60px;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n`\r\nconst Controls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst PlayButton = styled.button`\r\n  border-radius: 4px;\r\n  font-size: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 56px;\r\n  background: rgb(249, 249, 249);\r\n  border: none;\r\n  padding: 0px 24px;\r\n  margin-right: 22px;\r\n  letter-spacing: 1.8px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: rgb(198, 198, 198);\r\n  }\r\n`\r\n\r\nconst TrailerButton = styled(PlayButton)`\r\n  background: rgba(0, 0, 0, 0.3);\r\n  border: 1px solid rgb(249, 249, 249);\r\n  color: rgb(249, 249, 249);\r\n`\r\n\r\nconst AddButton = styled.button`\r\n  width: 44px;\r\n  height: 44px;\r\n  display: flex;\r\n  margin-right: 16px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 50%;\r\n  border: 2px solid white;\r\n  background-color: rgb(0, 0, 0, 0.6);\r\n  cursor: pointer;\r\n\r\n  span {\r\n    font-size: 30px;\r\n    color: white;\r\n  }\r\n`\r\nconst GroupWatchButton = styled(AddButton)`\r\n  background: rgb(0, 0, 0);\r\n`\r\nconst SubTitle = styled.div`\r\n  color: rgb(249, 249, 249);\r\n  font-size: 15px;\r\n  min-height: 20px;\r\n  margin-top: 26px;\r\n`\r\nconst Description = styled.div`\r\n  line-height: 1.4;\r\n  font-size: 20px;\r\n  margin-top: 16px;\r\n  color: rgb(249, 249, 249);\r\n  max-width: 760px;\r\n`\r\n","import React from 'react'\r\n\r\nfunction Error() {\r\n  return <div>ERROR 404 NOT FOUND</div>\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction Login() {\r\n  return (\r\n    <Container>\r\n      <CTA>\r\n        <CTALogoOne src='/images/cta-logo-one.svg' />\r\n        <SignUp>GET ALL THERE</SignUp>\r\n        <Description>Get Access to Disney</Description>\r\n        <CTALogoTwo src='/images/cta-logo-two.png' />\r\n      </CTA>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  height: calc(100vh - 70px);\r\n  display: flex;\r\n  align-items: top;\r\n  justify-content: center;\r\n\r\n  &:before {\r\n    background-position: top;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-image: url('/images/login-background.jpg');\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    z-index: -1;\r\n    opacity: 0.7;\r\n  }\r\n`\r\nconst CTA = styled.div`\r\n  max-width: 650px;\r\n  padding: 80px 40px;\r\n  width: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 100px;\r\n  align-items: center;\r\n`\r\n\r\nconst CTALogoOne = styled.img``\r\n\r\nconst SignUp = styled.a`\r\n  width: 100%;\r\n  background-color: #0063e5;\r\n  font-weight: bold;\r\n  padding: 17px 0;\r\n  color: #f9f9f9;\r\n  border-radius: 3px;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  transition: all 250ms;\r\n  letter-spacing: 1.5px;\r\n  margin-top: 8px;\r\n  margin-bottom: 12px;\r\n\r\n  &:hover {\r\n    background: #0483ee;\r\n  }\r\n`\r\nconst Description = styled.p`\r\n  font-size: 11px;\r\n  letter-spacing: 1.5px;\r\n  text-align: center;\r\n  line-height: 1.5;\r\n`\r\nconst CTALogoTwo = styled.img`\r\n  width: 90%;\r\n`\r\n","import React from 'react'\nimport Header from './components/Header'\nimport Home from './components/Home'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.css'\nimport Details from './components/Details'\nimport Error from './components/Error'\nimport Login from './components/Login'\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n        <Header />\n        <Switch>\n          <Route path='/detail/:id'>\n            <Details/>\n          </Route>\n          <Route path='/'>\n            <Home />\n          </Route>\n\n          <Route path='/login'>\n            <Login />\n          </Route>\n\n          <Route exact path='*'>\n            <Error />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport MovieReducer from '../features/Movies/MovieSlice'\nimport UserSlice from '../features/Users/UserSlice'\n// import UserReducer from '../features/Users/UserSlice'\n\nexport const store = configureStore({\n  reducer: {\n    movie: MovieReducer,\n    user: UserSlice,\n  },\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}