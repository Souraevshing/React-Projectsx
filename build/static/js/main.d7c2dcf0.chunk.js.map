{"version":3,"sources":["List.js","Alert.js","App.js","reportWebVitals.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","type","onClick","Alert","msg","removeAlert","list","useEffect","timeOut","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIsEditing","editId","setEditId","show","alert","setAlert","setItem","stringify","showAlert","onSubmit","e","preventDefault","newItems","Date","getTime","toString","placeholder","value","onChange","target","length","filter","selectedItem","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7c2dcf0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FaEdit, FaTrash } from 'react-icons/fa'\r\nconst List = ({ items, removeItem, editItem }) => {\r\n  return (\r\n    <div className='grocery-list'>\r\n      {items.map((item) => {\r\n        const { id, title } = item\r\n        return (\r\n          <article className='grocery-item' key={id}>\r\n            <p className='title'>{title}</p>\r\n            <div className='btn-container'>\r\n              <button\r\n                type='button'\r\n                className='edit-btn'\r\n                onClick={() => editItem(id)}\r\n              >\r\n                <FaEdit />\r\n              </button>\r\n              <button\r\n                type='button'\r\n                className='delete-btn'\r\n                onClick={() => removeItem(id)}\r\n              >\r\n                <FaTrash />\r\n              </button>\r\n            </div>\r\n          </article>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import React, { useEffect } from 'react'\r\n\r\nconst Alert = ({ msg, type, removeAlert, list }) => {\r\n  useEffect(() => {\r\n    const timeOut = setTimeout(() => {\r\n      removeAlert()\r\n    }, 2000)\r\n    return () => clearTimeout(timeOut)\r\n  }, [list, removeAlert])\r\n  return <p className={`alert alert-${type}`}> {msg} </p>\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\n//To render the values even if browser is refreshed.\nconst getLocalStorage = () => {\n  let list = localStorage.getItem('list')\n  if (list) {\n    return (list = JSON.parse(localStorage.getItem('list')))\n  } else {\n    return []\n  }\n}\n\nfunction App() {\n  const [name, setName] = useState('')\n  const [list, setList] = useState(getLocalStorage())\n  const [isEditing, setIsEditing] = useState(false)\n  const [editId, setEditId] = useState(null)\n  const [alert, setAlert] = useState({\n    show: false,\n    msg: '',\n    type: '',\n  })\n\n  const submitButton = (e) => {\n    e.preventDefault()\n    if (!name) {\n      showAlert(true, 'danger', 'Please enter some text.')\n    } else if (name && isEditing) {\n      setList(\n        list.map((item) => {\n          if (item.id === editId) {\n            return { ...item, title: name }\n          }\n          return item\n        })\n      )\n      setName('')\n      setEditId(null)\n      setIsEditing(false)\n      showAlert(true, 'success', 'Item edited.')\n    } else {\n      showAlert(true, 'success', 'Successfully added to list')\n      const newItems = { id: new Date().getTime().toString(), title: name }\n      setList([...list, newItems])\n      setName('')\n    }\n  }\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(list))\n  }, [list])\n\n  const showAlert = (show = false, type = '', msg = '') => {\n    setAlert({ show, type, msg })\n  }\n\n  const clearList = () => {\n    showAlert(true, 'danger', 'List Empty')\n    setList([])\n  }\n\n  const removeItem = (id) => {\n    showAlert(true, 'danger', 'Item removed')\n    setList(list.filter((item) => item.id !== id))\n  }\n\n  const editItem = (id) => {\n    const selectedItem = list.find((item) => item.id === id)\n    setIsEditing(true)\n    setEditId(id)\n    setName(selectedItem.title)\n  }\n\n  return (\n    <section className='section-center'>\n      <form className='grocery-form' onSubmit={submitButton}>\n        {alert.show && <Alert {...alert} removeAlert={showAlert} />}\n        <h3>Todo</h3>\n        <div className='form-control'>\n          <input\n            type='text'\n            className='todo'\n            placeholder='Enter something to add'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <button type='submit' className='submit-btn'>\n            {isEditing ? 'edit' : 'submit'}\n          </button>\n        </div>\n      </form>\n      {list.length > 0 && (\n        <div className='grocery-container'>\n          <List items={list} removeItem={removeItem} editItem={editItem} />\n          <button className='clear-btn' onClick={clearList}>\n            Clear\n          </button>\n        </div>\n      )}\n    </section>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}