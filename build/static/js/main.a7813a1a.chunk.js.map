{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","loading","setLoading","jobs","setJobs","value","setValue","fetchJobs","a","fetch","res","json","jobsList","useEffect","className","company","dates","duties","title","map","item","id","onClick","duty","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAiEeA,MA5Df,WACE,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAS,uCAAG,8BAAAC,EAAA,sEACEC,MARb,6CAOW,cACVC,EADU,gBAEOA,EAAIC,OAFX,OAEVC,EAFU,OAGhBV,GAAW,GACXE,EAAQQ,GAJQ,2CAAH,qDAWf,GAJAC,qBAAU,WACRN,MACC,IAECN,EACF,OACE,yBAASa,UAAU,kBAAnB,SACE,8CAKN,MAA0CX,EAAKE,GAAvCU,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,MAEhC,OACE,0BAASJ,UAAU,UAAnB,UACE,sBAAKA,UAAU,QAAf,UACE,4CACA,qBAAKA,UAAU,iBAEjB,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,gBAAf,SACGX,EAAKgB,KAAI,SAACC,EAAMC,GACf,OACE,wBAAsBC,QAAS,kBAAMhB,EAASe,IAA9C,SACGD,EAAKL,SADKK,EAAKC,SAMxB,0BAASP,UAAU,WAAnB,UACE,6BAAKI,IACL,6BAAKH,IACL,mBAAGD,UAAU,WAAb,SAAyBE,IACxBC,EAAOE,KAAI,SAACI,EAAMF,GACjB,OACE,sBAAcP,UAAU,WAAxB,UACE,cAAC,IAAD,CAAoBA,UAAU,aAC9B,4BAAIS,MAFIF,gBCzCTG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a7813a1a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { FaAngleDoubleRight } from 'react-icons/fa'\n\nconst URL = `https://course-api.com/react-tabs-project`\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const [jobs, setJobs] = useState([])\n  const [value, setValue] = useState(0)\n\n  const fetchJobs = async () => {\n    const res = await fetch(URL)\n    const jobsList = await res.json()\n    setLoading(false)\n    setJobs(jobsList)\n  }\n\n  useEffect(() => {\n    fetchJobs()\n  }, [])\n\n  if (loading) {\n    return (\n      <section className='section loading'>\n        <h1>Loading...</h1>\n      </section>\n    )\n  }\n\n  const { company, dates, duties, title } = jobs[value]\n\n  return (\n    <section className='section'>\n      <div className='title'>\n        <h1>Experience</h1>\n        <div className='underline'></div>\n      </div>\n      <div className='jobs-center'>\n        <div className='btn-container'>\n          {jobs.map((item, id) => {\n            return (\n              <button key={item.id} onClick={() => setValue(id)}>\n                {item.company}\n              </button>\n            )\n          })}\n        </div>\n        <article className='job-info'>\n          <h3>{title}</h3>\n          <h4>{company}</h4>\n          <p className='job-date'>{dates}</p>\n          {duties.map((duty, id) => {\n            return (\n              <div key={id} className='job-desc'>\n                <FaAngleDoubleRight className='job-icon'></FaAngleDoubleRight>\n                <p>{duty}</p>\n              </div>\n            )\n          })}\n        </article>\n      </div>\n    </section>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}