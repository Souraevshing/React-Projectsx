{"version":3,"sources":["data.js","Review.js","App.jsx","reportWebVitals.js","index.js"],"names":["data","id","name","job","image","text","Review","useState","index","setIndex","checkIndex","no","length","className","src","alt","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQA0BeA,EAxBF,CACX,CACEC,GAAI,EACJC,KAAM,eACNC,IAAK,OACLC,MAAO,uDACPC,KACE,gCACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,QAIN,CACEJ,GAAI,EACJC,KAAM,gBACNC,IAAK,WACLC,MACE,qPACFC,KAAM,cAAC,IAAD,M,QCuCKC,EAzDA,WACb,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAmCT,EAAKQ,GAAhCN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,KAuBpBK,EAAa,SAACC,GAClB,OAAIA,EAAK,EACA,EAELA,EAAKX,EAAKY,OAAS,EACdZ,EAAKY,OAAS,EAEhBD,GAET,OACE,0BAASE,UAAU,SAAnB,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKC,IAAKV,EAAOW,IAAKb,EAAMW,UAAU,eACtC,sBAAMA,UAAU,aAAhB,SACE,cAAC,IAAD,SAGJ,oBAAIA,UAAU,SAAd,SAAwBX,IACxB,mBAAGW,UAAU,MAAb,SAAoBV,IACpB,mBAAGU,UAAU,OAAb,SAAqBR,IACrB,sBAAKQ,UAAU,mBAAf,UACE,wBAAQA,UAAU,WAAWG,QA1CnB,WACdP,GAAS,SAACD,GAER,OAAOE,EADQF,EAAQ,OAwCrB,SACE,cAAC,IAAD,MAEF,wBAAQK,UAAU,WAAWG,QAtCnB,WACdP,GAAS,SAACD,GAER,OAAOE,EADQF,EAAQ,OAoCrB,SACE,cAAC,IAAD,aCtCKS,EAZH,WACV,OACE,yBAASJ,UAAU,YAAnB,SACE,sBAAKA,UAAU,QAAf,UACE,gDACA,qBAAKA,UAAU,cACf,cAAC,EAAD,UCEOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ad516631.chunk.js","sourcesContent":["import { FaFacebook, SiReact, IoLogoNodejs, DiMongodb } from 'react-icons/all'\r\n\r\nconst data = [\r\n  {\r\n    id: 1,\r\n    name: 'Saurav Kumar',\r\n    job: 'Boss',\r\n    image: 'https://avatars.githubusercontent.com/u/50770504?v=4',\r\n    text: (\r\n      <div>\r\n        <SiReact />\r\n        <IoLogoNodejs />\r\n        <DiMongodb />\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Sauraev Shing',\r\n    job: 'Employee',\r\n    image:\r\n      'https://scontent.fpat3-2.fna.fbcdn.net/v/t1.6435-9/187128552_1701381306714721_6100717332843607919_n.jpg?_nc_cat=110&ccb=1-3&_nc_sid=e3f864&_nc_ohc=L0pVEPBxt2UAX8DDWVY&_nc_ht=scontent.fpat3-2.fna&oh=d48a46d305ad489dc11969088f5c580a&oe=60D76200',\r\n    text: <FaFacebook />,\r\n  },\r\n]\r\n\r\nexport default data\r\n","import React, { useState } from 'react'\r\nimport data from './data'\r\nimport { FaChevronLeft, FaChevronRight, RiAwardFill } from 'react-icons/all'\r\n\r\nconst Review = () => {\r\n  const [index, setIndex] = useState(0)\r\n  const { name, job, image, text } = data[index]\r\n\r\n  const prevBtn = () => {\r\n    setIndex((index) => {\r\n      let newIndex = index - 1\r\n      return checkIndex(newIndex)\r\n    })\r\n  }\r\n\r\n  const nextBtn = () => {\r\n    setIndex((index) => {\r\n      let newIndex = index + 1\r\n      return checkIndex(newIndex)\r\n    })\r\n  }\r\n\r\n  const randomBtn = () => {\r\n    let random = Math.floor(Math.random - data.length)\r\n    if (random === index) {\r\n      random = index + 1\r\n    }\r\n    setIndex(checkIndex(random))\r\n  }\r\n  const checkIndex = (no) => {\r\n    if (no < 0) {\r\n      return 0\r\n    }\r\n    if (no > data.length - 1) {\r\n      return data.length - 1\r\n    }\r\n    return no\r\n  }\r\n  return (\r\n    <article className='review'>\r\n      <div className='img-container'>\r\n        <img src={image} alt={name} className='person-img' />\r\n        <span className='quote-icon'>\r\n          <RiAwardFill />\r\n        </span>\r\n      </div>\r\n      <h4 className='author'>{name}</h4>\r\n      <p className='job'>{job}</p>\r\n      <p className='info'>{text}</p>\r\n      <div className='button-container'>\r\n        <button className='prev-btn' onClick={prevBtn}>\r\n          <FaChevronLeft />\r\n        </button>\r\n        <button className='next-btn' onClick={nextBtn}>\r\n          <FaChevronRight />\r\n        </button>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Review\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Review from './Review'\r\n\r\nconst App = () => {\r\n  return (\r\n    <section className='container'>\r\n      <div className='title'>\r\n        <h1>Review Project</h1>\r\n        <div className='underline'></div>\r\n        <Review />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}